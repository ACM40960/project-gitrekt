{
  "name": "Final_workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -304,
        -16
      ],
      "id": "689f0fee-db09-4bcd-8855-59d1b219bf77",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are correcting SQL for a SQLite database given. \n\nRequirements:\n1. find errors in the schema of this data base\n2. Output ONLY the corrected SQL query.\n3. Do NOT include explanations, comments, markdown, or any other text.\n4. The first non-whitespace character in your response must be SELECT.\n5. The SQL must run successfully on the SQLite schema.\n\nSQL to fix: {{ $json.data }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -256,
        752
      ],
      "id": "d54bc52f-0fc2-49eb-b50e-9947e495483a",
      "name": "AI Agent",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "command": "=sqlite3 /files/Chinook.db \"BEGIN; {{$json.output?.match(/SELECT[\\s\\S]*/)?.[0]}}; ROLLBACK;\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        528,
        432
      ],
      "id": "e702bb77-b141-41a8-bf57-0c5f0f71df7d",
      "name": "Execute Command",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        80,
        912
      ],
      "id": "7ce6d9cc-44ce-48b0-9350-3f58fbdc3deb",
      "name": "First Correction Attempt with Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "bhMntl1lBELHKu8d",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "58a4f23f-9508-4798-b017-e02d25577377",
              "leftValue": "={{$json.error}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        672,
        560
      ],
      "id": "c9a152be-2f4f-4757-963d-a97503b5473d",
      "name": "If"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=The last attempt to correct this SQL failed with the following error from the database:\n{{$json.error}}\n\nRequirements:\n1. Output ONLY the corrected SQL query.\n2. Do NOT include explanations, comments, markdown, or any other text.\n3. The first non-whitespace character in your response must be SELECT.\n4. The SQL must run successfully on the SQLite schema.\n\nOriginal SQL to fix:\n{{$json.output}}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2688,
        160
      ],
      "id": "01eccdc4-089f-4435-b1a2-ebfb0bb67a2d",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2592,
        464
      ],
      "id": "4e17a459-a627-4a56-9078-a03fe42c7a1b",
      "name": "Re-Fix with Error",
      "credentials": {
        "googlePalmApi": {
          "id": "bhMntl1lBELHKu8d",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2096,
        160
      ],
      "id": "5364a428-ea89-4f88-99a7-997433236bd8",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "/files/corrected_and_approved.sql",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2368,
        672
      ],
      "id": "5ebecf35-441e-4d7d-92ff-7d85f09714c5",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=compare the original faulty sql with the corrected sql\n\nOriginal Faulty SQL:\nSELECT\n    c.FName,\n    c.LastName,\n    TOTAL(ii.UnitPrice * ii.Quantity) AS TotalSpent\nFROM\n    customer c\nJOIN\n    invoices i ON CustomerId = i.CustomerId\nLEFT JOIN\n    invoice_items ii ON i.InvoiceId\nGROUP BY\n    c.CustomerId\nORDER BY\n    TotalSpent ASC;\n\nCorrected SQL:\nSELECT\n    c.FirstName,\n    c.LastName,\n    SUM(ii.UnitPrice * ii.Quantity) AS TotalSpent\nFROM\n    customers c\nJOIN\n    invoices i ON c.CustomerId = i.CustomerId\nJOIN\n    invoice_items ii ON i.InvoiceId = ii.InvoiceId\nGROUP BY\n    c.CustomerId, c.FirstName, c.LastName\nORDER BY\n    TotalSpent DESC\nLIMIT 10;\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        4112,
        832
      ],
      "id": "1a9977ab-7704-4347-bf6d-6a32c236a624",
      "name": "AI Agent2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3088,
        848
      ],
      "id": "79e46825-fe70-41f5-b7f5-6dbe61031ee6",
      "name": "Merge1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        4112,
        1056
      ],
      "id": "c4ae3aed-8d9e-4fb0-a067-3fb644f32077",
      "name": "Generate Change Summary",
      "credentials": {
        "googlePalmApi": {
          "id": "bhMntl1lBELHKu8d",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9171e6a8-c93c-4064-af1a-251fb7c5ec42",
              "name": "attempt",
              "value": "={{$json.attempt ?? 0 + 1}}\n",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1536,
        272
      ],
      "id": "2df6dc83-2ea6-45e0-ada9-652b8511b0a5",
      "name": "Attempt++"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa696e05-1514-4496-b4f7-f68bb8ae6ccb",
              "leftValue": "={{$json.attempt}}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1776,
        320
      ],
      "id": "e8e2b82a-29d3-49d2-ada8-c5fe72bfe919",
      "name": "Max Tries?"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "sql",
        "options": {
          "fileName": "corrected_and_approved.sql"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2096,
        656
      ],
      "id": "596d4dce-9e1d-49bd-a4a7-465885ccdb7b",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c63ef28-bc3f-49ed-8a26-d0da67addcce",
              "name": "sql",
              "value": "={{ ($json.output || '')\n   .toString()\n   .replace(/```/g,'')\n   .replace(/^sql\\s*/i,'')\n   .replace(/^=/,'')\n   .trim()\n   .match(/SELECT[\\s\\S]*/i)?.[0] || '' }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1088,
        656
      ],
      "id": "545cc788-0fbf-4f51-8bf6-71da7cd877a1",
      "name": "Pick SQL (no error)"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "38ef920d-199c-4ba8-b261-6e0dab09d56a",
              "name": "sql",
              "value": "={{ ($json.output || '')\n    .toString()\n    .replace(/```/g, '')\n    .replace(/^sql\\s*/i, '')\n    .replace(/^=/, '')\n    .trim()\n    .match(/SELECT[\\s\\S]*/i)?.[0] || '' }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1088,
        448
      ],
      "id": "0d897143-a263-41e2-84f9-887ffa885283",
      "name": "Pick SQL (error)"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      corrected_sql: $items(\"Merge1\")[1].json.output\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3488,
        832
      ],
      "id": "06aa9212-4366-4f0b-98cc-1e4c087af41f",
      "name": "Code"
    },
    {
      "parameters": {
        "fileSelector": "/files/test.sql",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        208,
        -32
      ],
      "id": "7c4c252b-d729-4e58-9144-3badb61163e6",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -208,
        272
      ],
      "id": "01aef25f-e245-4b60-b865-90c277f3477c",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2752,
        688
      ],
      "id": "db9a345c-c605-4303-94e2-b6a8c57f972f",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4717f2f0-3d7b-4b4c-9d67-dddf1f7fb7c8",
              "name": "original_sql",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        848,
        48
      ],
      "id": "45a8a87a-f1ab-4de6-8573-003aa176f045",
      "name": "saving the original sql"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10986229-a7ce-4603-a430-61dd09f3a19a",
              "name": "agent_output",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3152,
        240
      ],
      "id": "d9b1b812-9816-4212-b130-5d955c04b699",
      "name": "saving last correction"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "20bf9849-41ea-4b95-94f7-412ef2dd324c",
              "name": "error",
              "value": "={{$items(\"Execute Command\")[0]?.json?.error || \"\"}}\n",
              "type": "string"
            },
            {
              "id": "43ec0ae3-ba64-438c-9987-b300daba98cd",
              "name": "output",
              "value": "={{$items(\"AI Agent\")[0]?.json?.output || \"\"}}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2352,
        144
      ],
      "id": "00ac5a03-b3ae-4894-aa18-ba0be70ae774",
      "name": "save the error to loop correction"
    }
  ],
  "pinData": {
    "AI Agent1": [
      {
        "json": {
          "output": "SELECT T1.artist_name, COUNT(T3.track_id) FROM artists AS T1 INNER JOIN albums AS T2 ON T1.artist_id = T2.artist_id INNER JOIN tracks AS T3 ON T2.album_id = T3.album_id GROUP BY T1.artist_name ORDER BY COUNT(T3.track_id) DESC"
        }
      },
      {
        "json": {
          "output": "SELECT T1.artist_name, COUNT(T3.track_id) FROM artists AS T1 INNER JOIN albums AS T2 ON T1.artist_id = T2.artist_id INNER JOIN tracks AS T3 ON T2.album_id = T3.album_id GROUP BY T1.artist_name ORDER BY COUNT(T3.track_id) DESC"
        }
      }
    ]
  },
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "First Correction Attempt with Gemini": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Pick SQL (error)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pick SQL (no error)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Re-Fix with Error": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "save the error to loop correction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "saving last correction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Change Summary": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Attempt++": {
      "main": [
        [
          {
            "node": "Max Tries?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Max Tries?": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pick SQL (no error)": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pick SQL (error)": {
      "main": [
        [
          {
            "node": "Attempt++",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk2": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "saving the original sql",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "saving last correction": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "save the error to loop correction": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5b62359a-b35c-4884-b68e-957916fb2c57",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ef97483b4b75a2de989abb2eb30b166c581613696accc3203df4d4aa227764bf"
  },
  "id": "081nvohbWDBL2EI8",
  "tags": []
}